# name: Cypress Tests 2

# on: push

# jobs:
#   # install:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Checkout
#   #       uses: actions/checkout@v3

#   #     # - name: Update @angular/compiler and @angular/compiler-cli
#   #     #   run: npm install @angular/compiler@16.1.3 @angular/compiler-cli@16.1.3 --legacy-peer-deps
        
#   #     - run: npm install --legacy-peer-deps

#   #     - name: Cypress install
#   #       uses: cypress-io/github-action@v5
#   #       with:
#   #         # Disable running of tests within install job
#   #         runTests: false
#   #         build: npm run build

#   #     - name: Save build folder
#   #       uses: actions/upload-artifact@v3
#   #       with:
#   #         name: build
#   #         if-no-files-found: error
#   #         path: build
#   cypress-run:
#     runs-on: ubuntu-latest
#     # needs: install
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - run: npm install --legacy-peer-deps

#       # - name: Download the build folder
#       #   uses: actions/download-artifact@v3
#       #   with:
#       #     name: build
#       #     path: build

#       - name: Cypress run
#         uses: cypress-io/github-action@v5
#         with:
#           start: npm start
#           browser: 

# name: E2E Cypress Test

# on: push

# jobs:
#   cypress-run:
#     runs-on: windows-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
      
#       - name: Install Dependencies
#         run: npm install --legacy-peer-deps

#       - name: Cypress run
#         uses: cypress-io/github-action@v4
#         with:
#           build: npm run build
#           start: npm start
#           wait-on: 'http://localhost:4200'
#           browser: chrome

name: E2ECypress Tests
on: [push]
jobs:
 Cypress-Test:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout GitCode
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Create environment file
        env:
          NX_FIREBASE_KEY: ${{ secrets.NX_FIREBASE_KEY }}
          NX_FIREBASE_AUTH_DOMAIN: ${{ secrets.NX_FIREBASE_AUTH_DOMAIN }}}
          NX_FIREBASE_DATABASE_URL: ${{ secrets.NX_FIREBASE_DATABASE_URL }}
          NX_FIREBASE_PROJECT_ID: ${{ secrets.NX_FIREBASE_PROJECT_ID }}}
          NX_FIREBASE_STORAGE_BUCKET: ${{ secrets.NX_FIREBASE_STORAGE_BUCKET }}
          NX_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NX_FIREBASE_MESSAGING_SENDER_ID }}}
          NX_FIREBASE_APP_ID: ${{ secrets.NX_FIREBASE_APP_ID }}
          NX_FIREBASE_MEASUREMENT_ID: ${{ secrets.NX_FIREBASE_MEASUREMENT_ID }}
          NX_GOOGLE_MAPS_KEY: ${{ secrets.NX_GOOGLE_MAPS_KEY }}
        run: |
          cat <<EOF > .env
          NX_ENVIRONMENT=production
          NX_USE_EMULATORS=false
          NX_FIREBASE_KEY="$NX_FIREBASE_KEY"
          NX_FIREBASE_AUTH_DOMAIN="$NX_FIREBASE_AUTH_DOMAIN"
          NX_FIREBASE_DATABASE_URL="$NX_FIREBASE_DATABASE_URL"
          NX_FIREBASE_PROJECT_ID="$NX_FIREBASE_PROJECT_ID"
          NX_FIREBASE_STORAGE_BUCKET="$NX_FIREBASE_STORAGE_BUCKET"
          NX_FIREBASE_MESSAGING_SENDER_ID="$NX_FIREBASE_MESSAGING_SENDER_ID"
          NX_FIREBASE_APP_ID="$NX_FIREBASE_APP_ID"
          NX_FIREBASE_MEASUREMENT_ID="$NX_FIREBASE_MEASUREMENT_ID"
          NX_GOOGLE_MAPS_KEY="$NX_GOOGLE_MAPS_KEY"
          EOF
          echo "cat .env"
 
      - name: Run Cypress Test
        uses: cypress-io/github-action@v5
        with:
          install-command: npm install --legacy-peer-deps
          config-file: ../../cypress
          build: npm run build:app:dev
          start: npm run start:app:dev
          wait-on: 'http://[::1]:4200/home'
          command: npx cypress run
